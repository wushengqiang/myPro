<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-3.0.xsd  
       http://www.springframework.org/schema/aop  
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx  
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 引入属性文件 -->  
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 数据源配置,使用应用内的c3p0数据库连接池 -->
	<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" id="dataSource">		 
	   <property name="driverClass" value="${jdbc.driver}">  </property>		
	   <property name="jdbcUrl" value="${jdbc.url}">  </property>		
	   <property name="user" value="${jdbc.username}">	</property>	  
	   <property name="password" value="${jdbc.password}">	</property>	  
	   <property name="autoCommitOnClose" value="true"> </property>		 
	   <property name="checkoutTimeout" value="${cpool.checkoutTimeout}"> </property>		 
	   <property name="initialPoolSize" value="${cpool.minPoolSize}"> </property>		 
	   <property name="minPoolSize" value="${cpool.minPoolSize}"> </property>		 
	   <property name="maxPoolSize" value="${cpool.maxPoolSize}"> </property>		 
	   <property name="maxIdleTime" value="${cpool.maxIdleTime}"> </property>		 
	   <property name="acquireIncrement" value="${cpool.acquireIncrement}"> </property>		 
	   <property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"> </property>   
	</bean> 
	
	<!-- sessionFactory -->
	<!-- hibrenate -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>		
		<!-- 扫描pojo包  -->
		<property name="packagesToScan" value="com.officeTool.myTask.pojo"></property>
	    <property name="hibernateProperties">
	    	<props>
	    		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
	    		<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
	    		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
	    		<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
	    	</props>
	    </property>
	</bean>
	
	<!-- spring jdbcTemplate 访问数据库 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <!--事务管理器  -->
   <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
     <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
   <!-- 采用声明式容器管理事务一般只对service层进行处理 -->   
  <aop:config expose-proxy="true">
    <!-- 只对业务逻辑层实施事务 -->   
    <aop:pointcut id="txPointcut" expression="execution(* com.officeTool.myTask.service.*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
  </aop:config>
  
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="merge*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="put*" propagation="REQUIRED" />  
      <tx:method name="use*" propagation="REQUIRED"/>  
      <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->  
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="count*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="*" propagation="REQUIRED" read-only="true" rollback-for="java.lang.Exception"/>  
    </tx:attributes>
  </tx:advice>
</beans>